@import "vars";
@import "overrideStyles";
@import "partials";
@import "elements";

@font-face {
    font-family: "Nunito";
    src: url(../fonts/Nunito/Nunito-Regular.ttf) format('truetype');
    font-display: swap; // Ensure text remains visible during webfont load
    font-weight: normal;
    font-style: normal;
}

@font-face {
    font-family: "Nunito";
    src: url(../fonts/Nunito/Nunito-Bold.ttf) format('truetype');
    font-display: swap; // Ensure text remains visible during webfont load
    font-weight: bold;
    font-style: normal;
}

@font-face {
    font-family: "Nunito";
    src: url(../fonts/Nunito/Nunito-Light.ttf) format('truetype');
    font-display: swap; // Ensure text remains visible during webfont load
    font-weight: 300;
    font-style: normal;
}

@font-face {
    font-family: "Byom";
    src: url(../fonts/Byom/Byom-Regular.ttf) format('truetype');
    font-display: swap; // Ensure text remains visible during webfont load
    font-weight: normal;
    font-style: normal;
}

@font-face {
    font-family: "Byom";
    src: url(../fonts/Byom/Byom-Bold.ttf) format('truetype');
    font-display: swap; // Ensure text remains visible during webfont load
    font-weight: bold;
    font-style: normal;
}

@font-face {
    font-family: "Byom";
    src: url(../fonts/Byom/Byom-Light.ttf) format('truetype');
    font-display: swap; // Ensure text remains visible during webfont load
    font-weight: 300;
    font-style: normal;
}

@keyframes fadeInLeft {
    from {
        opacity:0;
        -webkit-transform: translatex(-100px);
        -moz-transform: translatex(-100px);
        -o-transform: translatex(-100px);
        transform: translatex(-100px);
    }
    to {
        opacity:1;
        -webkit-transform: translatex(0);
        -moz-transform: translatex(0);
        -o-transform: translatex(0);
        transform: translatex(0);
    }
}

@keyframes slideIn {
    0% {
        transform: translateY(1rem);
        opacity: 0;
    }
    100% {
        transform: translateY(0rem);
        opacity: 1;
    }
    0% {
        transform: translateY(1rem);
        opacity: 0;
    }
}

.slide-in {
    -webkit-animation-name: slideIn;
    -moz-animation-name: slideIn;
    -o-animation-name: slideIn;
    animation-name: slideIn;
    -webkit-animation-fill-mode: both;
    -moz-animation-fill-mode: both;
    -o-animation-fill-mode: both;
    animation-fill-mode: both;
    -webkit-animation-duration: 0.1s;
    -moz-animation-duration: 0.1s;
    -o-animation-duration: 0.1s;
    animation-duration: 0.1s;
    -webkit-animation-delay: 0.1s;
    -moz-animation-delay: 0.1s;
    animation-delay: 0.1s;
}

.fade-in-left {
    -webkit-animation-name: fadeInLeft;
    -moz-animation-name: fadeInLeft;
    -o-animation-name: fadeInLeft;
    animation-name: fadeInLeft;
    -webkit-animation-fill-mode: both;
    -moz-animation-fill-mode: both;
    -o-animation-fill-mode: both;
    animation-fill-mode: both;
    -webkit-animation-duration: 1s;
    -moz-animation-duration: 1s;
    -o-animation-duration: 1s;
    animation-duration: 1s;
    -webkit-animation-delay: 1s;
    -moz-animation-delay: 1s;
    animation-delay: 1s;
}

/*
|--------------------------------------------------------------------------
| Global styles
|--------------------------------------------------------------------------
|
| BEM methodology(https://en.bem.info/methodology/quick-start/#block) conventions should to be followed:
|
| - WHEN TO USE BLOCKS:
|   These basically encapsulate a standalone entity that is meaningful on its own.
|   While blocks can be nested and interact with each other, semantically
|   they remain equal; there is no precedence or hierarchy.
|   Holistic entities without DOM representation
|   (such as controllers or models) can be blocks as well.
|
| - WHEN TO USE ELEMENTS:
|   These are parts of a block and have no standalone meaning.
|   Any element is semantically tied to its block.
|
| - WHEN TO USE MODIFIERS:
|   Flags on blocks or elements. Use them to change appearance, behavior or state.
|
| - GRANDCHILDREN ELEMENTS:
|   Just use another underscore, example:
|   <article className='article'>
|     <div className='article__title>
|       <div className='article__title_text>
|       ...
|       </div>
|     </div>
|   </article>
|
*/

body {
    min-height: 100vh;
    background-color: $dark;
    color: $text;
    font: {
        family: 'Nunito', sans-serif;
    }
    overflow-x: hidden;

    &::-webkit-scrollbar {
        width: 0.5rem;
    }

    &::-webkit-scrollbar-track {
        background: $bg;
    }

    &::-webkit-scrollbar-thumb {
        background: $blue;
        border-radius: 1rem;
    }
}

main {
    padding: 5rem 0 1rem 0; // compensating for top fixed navigation
}

button {
    background: none;
    border: none;
    padding: 0;
}

h1, h2, h3, h4, h5, h6 {
    color: #fff;
    font: {
        weight: bold;
    }
}

p {
    margin: 0;
}

a {
    cursor: pointer;
    color: $blue;
    text-decoration: none;
    transition: color 0.2s;
    font: {
        weight: bold;
    }
    &:hover {
        color: $darkerBlue;
    }
}

// fix autocomplete inputs
input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-results-button,
input[type="search"]::-webkit-search-results-decoration { display: none; }
input[type=search]::-ms-clear {  display: none; width : 0; height: 0; }
input[type=search]::-ms-reveal {  display: none; width : 0; height: 0; }

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
    -webkit-text-fill-color: $text;
    -webkit-box-shadow: none!important;
    background-color: $bg2!important;
    transition: background-color 5000s ease-in-out 0s;
}
.text-shadow {
    text-shadow: 2px 2px #000;
}

.required-field:after {
    content: " *";
    color: red;
}

.dark {
    background-color: $bg;
    padding: 1rem;
    margin: 1rem 0;
    border-radius: 0.65rem;
    box-shadow: 0 0 20px 0 rgb(76 87 125 / 2%);
}

.color {
    &-text {
        color: $text;
    }
    &-dark {
        color: $dark;
    }
    &-bg {
        color: $bg;
    }
    &-bg2 {
        color: $bg2;
    }
    &-blue {
        color: $blue;
    }
    &-green {
        color: $green;
    }
    &-orange {
        color: $orange;
    }
    &-red {
        color: $red;
    }
    &-info {
        color: $purple;
    }
    &-grey {
        color: $grey;
    }
}

.title {
    margin: 2rem 0;
    text-transform: uppercase;
    font: {
        weight: bold;
    }
    &--bordered {
        display: inline-block;
        border-bottom: 0.25rem solid $blue;
        border-radius: 0.1rem;
        padding: 0 0.2rem;
        margin: 1rem 0;
        text-transform: unset;
    }
}

//// Media queries
//
//// Small devices (landscape phones, 576px and up)
//@media (min-width: 576px) {
//}
//
//// Medium devices (tablets, 768px and up)
//@media (min-width: 768px) {
//}
//
//// Large devices (desktops, 992px and up)
//@media (min-width: 992px) {
//}
//
//// X-Large devices (large desktops, 1200px and up)
//@media (min-width: 1200px) {
//}
//
//// XX-Large devices (larger desktops, 1400px and up)
//@media (min-width: 1400px) {
//}
//
//// Landscape view
//@media (min-height: 500px) {
//}
